<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://java.sun.com/xml/ns/persistence"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd"
   version="1.0">
   <persistence-unit name="mainManager" transaction-type="RESOURCE_LOCAL">
   		<!--  transaction-type="JTA" ou "RESOURCE_LOCAL"  -->

      <provider>org.hibernate.ejb.HibernatePersistence</provider>

	  <!-- Uncomment for production, replacing the connection properties -->
      <!--
      <jta-data-source>java:/DefaultDS</jta-data-source>
      	OR
      <non-jta-data-source>java:/DefaultDS</non-jta-data-source>
      -->

#foreach ($mapping in $classList)
	#if ($useAnnotations == true)
		<class>$mapping</class>
	#else
	    <mapping-file>$mapping</mapping-file>
	#end
#end

      <properties>
		<!-- Dev Only, replace this with a jdbc datasource -->
		<property name="hibernate.connection.driver_class" value="${project.databaseConfig.databaseDriver}" />
		<property name="hibernate.connection.url" value="${project.databaseConfig.url}" />
		<property name="hibernate.connection.username" value="${project.databaseConfig.username}" />
		<property name="hibernate.connection.password" value="$!{project.databaseConfig.password}" />

		<property name="hibernate.dialect" value="$!{hibernateSqlDialect}" />

		<property name="hibernate.show_sql" value="false" />
		<property name="hibernate.format_sql" value="false" />
		<property name="hibernate.use_sql_comments" value="false" />
		<property name="hibernate.connection.charSet" value="UTF-8" />
		<property name="hibernate.connection.pool_size" value="2" />
		<property name="hibernate.cache.use_second_level_cache" value="true" />
		<property name="hibernate.cache.use_query_cache" value="true" />
		<property name="hibernate.cache.provider_class" value="net.sf.ehcache.hibernate.EhCacheProvider" />
      </properties>
   </persistence-unit>
</persistence>
